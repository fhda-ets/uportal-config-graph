plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id "idea"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "project-report"
    id "war"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

ext['tomcat.version'] = "8.5.37"

dependencies {
    def springVersion = "2.1.4.RELEASE"
    implementation "org.springframework.boot:spring-boot-starter-web:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-log4j2:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-cache:${springVersion}"
    implementation "com.hazelcast:hazelcast:3.12"
    implementation "com.google.guava:guava:27.0.1-jre"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.8"
    implementation "io.jsonwebtoken:jjwt-api:0.10.5"
    implementation "com.github.ben-manes.caffeine:caffeine:2.7.0"
    runtime "io.jsonwebtoken:jjwt-impl:0.10.5"
    runtime "io.jsonwebtoken:jjwt-jackson:0.10.5"
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        // Exclude JUnit 4.x
        exclude group: "junit", module: "junit"
    }

    def junit5Version = "5.4.1"
    testCompile "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
    testCompile "org.junit.jupiter:junit-jupiter-params:${junit5Version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"
    testImplementation "org.junit.platform:junit-platform-commons:1.4.2"
    testRuntimeOnly "org.junit.platform:junit-platform-engine:1.4.2"
}

configurations {
    all {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
}

bootRun {
    main = "edu.fhda.uportal.confgraph.SpringBootRunner"
    args "--spring.config.name=localdev"
    jvmArgs "-Dportal.home=config"
    workingDir project.rootDir
}

test {
    reports {
        html.enabled = true
    }
}

war {
    enabled = true
    archiveName = "${project.name}.war"
}